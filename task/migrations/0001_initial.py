# Generated by Django 4.2.15 on 2024-08-21 05:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_profile', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=25)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=25)),
                ('description', models.TextField()),
                ('work_type', models.CharField(choices=[('IN_PERSON', 'In Person'), ('ONLINE', 'Online')], default='ONLINE', max_length=10)),
                ('reward', models.FloatField(default=0.0)),
                ('address', models.CharField(max_length=150)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('status', models.CharField(choices=[('IN_PERSON', 'Pending'), ('ONLINE', 'In Progress'), ('ACCEPTED', 'Accepted'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='IN_PERSON', max_length=10)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('performer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_performer', to='user_profile.userprofile')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_provider', to='user_profile.userprofile')),
                ('task_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task.taskcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
